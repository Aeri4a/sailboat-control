const coefs = [
    0.8552868086961989, 0.007712865177737268, -0.6635550741181487,
    -0.05841192614387274, -0.31648475784251945, -1.6655535903801222,
    9.807621749941644, 0.07929555574104712, 0.06315510686158626,
    0.0009738079842759349, 0.04545066981012345, 0.23370361838394102,
    -0.00153894007075216, -0.17698848793072353, -2.6523817289024416,
    -0.02158495576504988, -0.012685633340530873, 1.4272421376565094,
    8.915130711749946, -0.9700459052289417, -6.881128775159292,
    -13.401670280074645, 0.3479893882429269, -0.13957799128409407,
    -1.6597110955923333, -3.2329323344279715, -14.059117892701058,
    -23.95657534462534, 1.153037420385502, -0.4633601891168525,
    0.648537362694002, 1.7286693533916218, -13.053751366389559,
    -0.0012238530229256794, -0.02137821501069217, 33.81392492571629,
    -20.0646238269576, 0.035802246950813695, -0.050679235086903925,
    1783.841167909631, -1.5560822067854674, 0.9683803076029115,
    0.016424440307737796, -0.013555068477408666, 0.026911175843521987,
];

const BUFFER = 0.17453292519;

const calcMinTargetValue = (parameters: number[]) => {
    const paramArr = [1, ...parameters];
    let minTargetValue = BUFFER;
    let k = 0;

    for (let i = 0; i < paramArr.length; i++) {
        for (let j = i; j < paramArr.length; j++) {
            minTargetValue += coefs[k] * paramArr[i] * paramArr[j];
            k++;
        }
    }

    return minTargetValue;
};

export default calcMinTargetValue;
